<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on fanchen&#39;s blog</title>
    <link>https://frefsd.github.io/hugo-dev/categories/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on fanchen&#39;s blog</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 13 Sep 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://frefsd.github.io/hugo-dev/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SSM 框架入门：Java Web 开发的黄金组合</title>
      <link>https://frefsd.github.io/hugo-dev/posts/ssm/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://frefsd.github.io/hugo-dev/posts/ssm/</guid>
      <description>&lt;h1 id=&#34;ssm-框架入门java-web-开发的黄金组合&#34;&gt;SSM 框架入门：Java Web 开发的黄金组合&lt;/h1&gt;&#xA;&lt;p&gt;接触 Java Web 开发三个月后，我深刻体会到 SSM 框架的强大——它将开发效率与系统稳定性完美结合，是后端新手入门的不二之选。&lt;/p&gt;&#xA;&lt;h2 id=&#34;框架优势&#34;&gt;框架优势&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;开发高效&lt;/strong&gt;：Spring 管理依赖，MVC 分层清晰&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;灵活解耦&lt;/strong&gt;：Spring + Spring MVC + MyBatis 各司其职&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;社区成熟&lt;/strong&gt;：文档丰富，问题好查，学习资源多&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;成本低廉&lt;/strong&gt;：可部署在普通服务器，适合中小项目&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;常见挑战&#34;&gt;常见挑战&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;配置繁琐&lt;/strong&gt;：XML 配置多，初学容易晕头转向&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;环境搭建&lt;/strong&gt;：整合三大框架需要耐心调试&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;事务管理&lt;/strong&gt;：Spring 声明式事务需理解原理才能用好&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;实用开发建议&#34;&gt;实用开发建议&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;先跑通 demo&lt;/strong&gt;：从一个简单的用户增删改查开始&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;善用注解&lt;/strong&gt;：用 &lt;code&gt;@Controller&lt;/code&gt;、&lt;code&gt;@Service&lt;/code&gt; 替代 XML 配置&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;日志先行&lt;/strong&gt;：集成 Logback，方便排查问题&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;分层清晰&lt;/strong&gt;：严格遵循 Controller → Service → Dao 结构&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;SSM 虽然不如 Spring Boot 现代，但它是理解 Spring 生态的基石。掌握它，你就真正踏入了 Java 后端的大门！&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vue.js 入门指南：用组合式 API 构建现代前端</title>
      <link>https://frefsd.github.io/hugo-dev/posts/vue/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://frefsd.github.io/hugo-dev/posts/vue/</guid>
      <description>&lt;h1 id=&#34;vuejs-入门指南用组合式-api-构建现代前端&#34;&gt;Vue.js 入门指南：用组合式 API 构建现代前端&lt;/h1&gt;&#xA;&lt;p&gt;告别冗长的 Options API，Vue 3 的组合式 API 让逻辑复用更简单、代码组织更清晰。&lt;br&gt;&#xA;无论你是从 React 转来，还是前端新手，都能快速上手并提升开发效率。&lt;/p&gt;&#xA;&lt;h2 id=&#34;核心组合式-api&#34;&gt;核心组合式 API&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ref-与-reactive&#34;&gt;ref 与 reactive&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;ref&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;reactive&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ref&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)        &lt;span style=&#34;color:#75715e&#34;&gt;// 响应式基本类型&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reactive&lt;/span&gt;({    &lt;span style=&#34;color:#75715e&#34;&gt;// 响应式对象&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Vue&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>微服务架构实战指南：构建高可用、可扩展的现代系统</title>
      <link>https://frefsd.github.io/hugo-dev/posts/cloud/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://frefsd.github.io/hugo-dev/posts/cloud/</guid>
      <description>&lt;h1 id=&#34;微服务架构实战指南构建高可用可扩展的现代系统&#34;&gt;微服务架构实战指南：构建高可用、可扩展的现代系统&lt;/h1&gt;&#xA;&lt;p&gt;在多个大型项目中落地微服务后，我总结出这套经过验证的技术栈和设计原则。&lt;br&gt;&#xA;无论你是从单体迁移，还是新建云原生应用，这套方案都能帮你少走弯路。&lt;/p&gt;&#xA;&lt;h2 id=&#34;服务通信与治理&#34;&gt;服务通信与治理&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;REST + OpenFeign&lt;/strong&gt;：服务间调用简洁清晰&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;gRPC&lt;/strong&gt;：高性能场景（如订单、支付）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Spring Cloud Gateway&lt;/strong&gt;：统一入口、路由、限流&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Nacos/Consul&lt;/strong&gt;：服务注册与发现，自动健康检查&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;服务可靠性保障&#34;&gt;服务可靠性保障&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Sentinel/Hystrix&lt;/strong&gt;：熔断降级，防止雪崩&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Seata&lt;/strong&gt;：分布式事务解决方案（AT/TCC 模式）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;RabbitMQ/Kafka&lt;/strong&gt;：异步解耦，削峰填谷&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Redis&lt;/strong&gt;：缓存热点数据，减轻数据库压力&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;部署与运维&#34;&gt;部署与运维&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;：每个服务独立打包，环境一致&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;：自动化部署、扩缩容、自愈&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Prometheus + Grafana&lt;/strong&gt;：监控指标可视化&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ELK/Sentry&lt;/strong&gt;：日志收集与错误追踪&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;开发效率实践&#34;&gt;开发效率实践&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# docker-compose.yml（本地快速启动）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3.8&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;user-service&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./user-service&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8081:8080&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;order-service&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./order-service&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8082:8080&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gateway&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./gateway&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8080:8080&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>现代 JavaScript 异步编程模式</title>
      <link>https://frefsd.github.io/hugo-dev/posts/javascript-async-patterns/</link>
      <pubDate>Mon, 01 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://frefsd.github.io/hugo-dev/posts/javascript-async-patterns/</guid>
      <description>&lt;h1 id=&#34;现代-javascript-异步编程模式&#34;&gt;现代 JavaScript 异步编程模式&lt;/h1&gt;&#xA;&lt;p&gt;探索从回调函数到 async/await 及更高级异步模式的演变。&lt;/p&gt;&#xA;&lt;h2 id=&#34;promise-链与-asyncawait-对比&#34;&gt;Promise 链与 Async/Await 对比&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Promise 链&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fetchUser&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  .&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fetchPosts&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  .&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;posts&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderPosts&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;posts&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  .&lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;handleError&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Async/Await 写法&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fetchUser&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;posts&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fetchPosts&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;renderPosts&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;posts&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;handleError&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
